Python automation can make these business tasks much easier for non-technical users, even those who dislike spreadsheets. Here’s how you can approach each of your requirements:

---

### 1. Copy & Paste WhatsApp Orders into Spreadsheets

**Solution:**  
Build a simple web or desktop app (with Python frameworks like Streamlit or Tkinter) that lets users paste their WhatsApp messages. The app then parses the text and adds structured data to a spreadsheet (Excel or Google Sheets) automatically.

**How it works:**  
- User pastes WhatsApp chat text into a text box.
- Script extracts orders from the text using regular expressions or natural language processing.
- Data is appended to a spreadsheet with columns like customer, product, quantity, date.

---

### 2. Count Stock Using Phone Cameras

**Solution:**  
Leverage phone cameras and Python’s image recognition libraries to scan barcodes, QR codes, or even recognize products by image.

**How it works:**  
- Use a mobile-friendly web app (e.g., using Streamlit with Streamlit’s camera input) or a dedicated phone app (with Kivy or BeeWare).
- User opens the app and uses the camera to scan products.
- Python reads the barcode/QR code or uses image recognition (OpenCV, TensorFlow) to identify the product and update inventory in real-time.

---

### 3. Calculate Net Profit

**Solution:**  
Automate profit calculation from your sales and cost data.

**How it works:**  
- Script reads sales and expense data from the spreadsheet.
- Calculates net profit:  
  `Net Profit = Total Sales - Total Costs`
- Presents the result in a simple dashboard or sends a summary via email/WhatsApp.

---

## Example: Paste, Parse, and Save WhatsApp Orders

Here’s a simple Python Streamlit app that demonstrates how a user could paste orders and automatically save them to a spreadsheet:

```python name=whatsapp_order_parser.py
import streamlit as st
import pandas as pd
import re

st.title("WhatsApp Order Parser")

orders_text = st.text_area("Paste WhatsApp orders here:")
submit = st.button("Parse & Save")

if submit and orders_text:
    # Example: "John: 2x Milk, 1x Bread"
    pattern = r"(\w+):\s*(.*)"
    orders = []
    for line in orders_text.strip().split('\n'):
        match = re.match(pattern, line)
        if match:
            customer, items = match.groups()
            for item in items.split(','):
                item = item.strip()
                qty_product = re.match(r"(\d+)x\s*(.+)", item)
                if qty_product:
                    qty, product = qty_product.groups()
                    orders.append({
                        'Customer': customer,
                        'Product': product.strip(),
                        'Quantity': int(qty)
                    })
    if orders:
        df = pd.DataFrame(orders)
        df.to_excel("orders.xlsx", index=False)
        st.write("Orders parsed and saved!")
        st.dataframe(df)
    else:
        st.write("No valid orders found.")
```

**How to Use:**
1. Run with `streamlit run whatsapp_order_parser.py`
2. Paste WhatsApp orders in the format: `Name: 2x Milk, 1x Bread`
3. Click "Parse & Save" to generate an Excel file.

---

## Next Steps

- Would you like a code sample for scanning barcodes with a phone camera?
- Or guidance on building a simple profit calculator based on your sales/cost spreadsheet?
- I can also show how to make these tools accessible with minimal technical knowledge required.

Let me know which part you’d like to dive deeper into!
